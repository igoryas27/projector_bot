import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto
import psycopg2

def get_db_connection():
    return psycopg2.connect(**DB_CONFIG)

bot = telebot.TeleBot(BOT_TOKEN)

def main_menu():
    markup = InlineKeyboardMarkup()
    markup.add(
        InlineKeyboardButton("–ü—Ä–æ–µ–∫—Ç", callback_data="project"),
        InlineKeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile"),
        InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts"),
        InlineKeyboardButton("–ö–≤–µ—Å—Ç—ã", callback_data="quests")
    )
    return markup

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(commands=["start"])
def start(message):
    print("–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞")  # –û—Ç–ª–∞–¥–∫–∞
    user_id = message.from_user.id
    username = message.from_user.username.strip().lower() if message.from_user.username else None
    full_name = message.from_user.full_name

    try:
        conn = get_db_connection()
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º username
        cursor.execute("SELECT * FROM users WHERE username = %s;", (username,))
        user_data = cursor.fetchone()

        if not user_data:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
            cursor.execute("""
                INSERT INTO users (user_id, full_name, username)
                VALUES (%s, %s, %s)
                ON CONFLICT (username) DO NOTHING;
            """, (user_id, full_name, username))
            conn.commit()
            text = f"–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω!\nID: {user_id}\n–ò–º—è: {full_name}\n–Æ–∑–µ—Ä–Ω–µ–π–º: @{username}"
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            cursor.execute("""
                UPDATE users
                SET full_name = %s
                WHERE username = %s;
            """, (full_name, username))
            conn.commit()
            # welcome —Ç–µ–∫—Å—Ç –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            text = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!\nID: {user_data[0]}\n–ò–º—è: {user_data[1]}\n–Æ–∑–µ—Ä–Ω–µ–π–º: @{user_data[2]}"

        conn.close()

        photo_path = "welcome_image.png" # –∫–∞—Ä—Ç–∏–Ω–∫–∞ –≤–µ–ª–∫–∞–º
        with open(photo_path, "rb") as photo:
            bot.send_photo(
                message.chat.id,
                photo,
                caption=text,
                reply_markup=main_menu()
            )

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ë–î: {e}")
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    print(f"–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: {call.data}")  # –û—Ç–ª–∞–¥–∫–∞
    try:
        if call.data == "quests":
            markup = InlineKeyboardMarkup()
            markup.add(
                InlineKeyboardButton("–ù–ê–ß–ê–õ–û", callback_data="quest_nachalo"),
                InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_main")
            )
            if call.message.content_type == "photo":
                bot.delete_message(call.message.chat.id, call.message.message_id)
                bot.send_message(
                    call.message.chat.id,
                    "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–≤–µ—Å—Ç—ã:",
                    reply_markup=markup
                )
            else:
                bot.edit_message_text(
                    "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–≤–µ—Å—Ç—ã:",
                    call.message.chat.id,
                    call.message.message_id,
                    reply_markup=markup
                )
        
        elif call.data == "quest_nachalo":
            markup = InlineKeyboardMarkup()
            markup.add(
                InlineKeyboardButton("–ë–†–û–ù–ò–†–û–í–ê–¢–¨", url="https://t.me/@Proektor_straha"),
                InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="quests")
            )
            new_photo_path = "nachalo_image.png"
            with open(new_photo_path, "rb") as new_photo:
                bot.edit_message_media(
                    media=InputMediaPhoto(
                        new_photo,
                        caption='–í—ã –∑–∞–ø–µ—Ä—Ç—ã –≤ —Å—Ç–∞—Ä–æ–º –¥–æ–º–µ. –ó–¥–µ—Å—å –∂–∏–ª –º–∞–Ω—å—è–∫ –í–∏–∫—Ç–æ—Ä –ö—Ä–µ–π–Ω...'
                    ),
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    reply_markup=markup
                )
        
        elif call.data == "project":
            markup = InlineKeyboardMarkup()
            markup.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_main"))  # –£–¥–∞–ª–µ–Ω—ã "–¢—Ä–æ—Ñ–µ–∏" –∏ "–ü—Ä–∞–≤–∏–ª–∞"
            new_photo_path = "project_image.png"
            with open(new_photo_path, "rb") as new_photo:
                bot.edit_message_media(
                    media=InputMediaPhoto(new_photo, caption="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."),
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    reply_markup=markup
                )
        
        # –£–¥–∞–ª–µ–Ω—ã –±–ª–æ–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ "trophies" –∏ "rules"
        
        elif call.data == "profile":
            user_id = call.from_user.id
            username = call.from_user.username.strip().lower() if call.from_user.username else None
            full_name = call.from_user.full_name
            
            conn = get_db_connection()
            cursor = conn.cursor()
            cursor.execute("SELECT * FROM users WHERE username = %s;", (username,))
            user_data = cursor.fetchone()
            
            if not user_data:
                cursor.execute("""
                    INSERT INTO users (user_id, full_name, username)
                    VALUES (%s, %s, %s)
                    ON CONFLICT (username) DO NOTHING;
                """, (user_id, full_name, username))
                conn.commit()
                text = f"–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω!\nID: {user_id}\n–ò–º—è: {full_name}\n–Æ–∑–µ—Ä–Ω–µ–π–º: @{username}"
            else:
                text = (
                    f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
                    f"ID: {user_data[0]}\n"
                    f"–ò–º—è: {user_data[1]}\n"
                    f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{user_data[2]}\n"
                    f"–¢–µ–ª–µ—Ñ–æ–Ω: {user_data[3] or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n"
                    f"–ö–≤–µ—Å—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {user_data[4]}\n"
                    f"–¢—Ä–æ—Ñ–µ–µ–≤ –ø–æ–ª—É—á–µ–Ω–æ: {user_data[5]}\n"
                    f"–û–±—â–∏–µ –æ—á–∫–∏: {user_data[6]}"
                )
            
            conn.close()
            markup = InlineKeyboardMarkup()
            markup.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_main"))
            if call.message.content_type == "photo":
                bot.delete_message(call.message.chat.id, call.message.message_id)
                bot.send_message(call.message.chat.id, text, reply_markup=markup)
            else:
                bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        
        elif call.data == "contacts":
            text = (
                "–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n"
                "üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67\n"
                "üìß Email: info@proektor-straha.ru\n"
                "üìç –ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –°—Ç—Ä–∞—à–Ω–∞—è, –¥. 13\n"
                "üåê –°–∞–π—Ç: https://proektor-straha.ru"
            )
            markup = InlineKeyboardMarkup()
            markup.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_main"))
            if call.message.content_type == "photo":
                bot.delete_message(call.message.chat.id, call.message.message_id)
                bot.send_message(call.message.chat.id, text, reply_markup=markup)
            else:
                bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        
        elif call.data == "back_main":
            if call.message.content_type == "photo":
                bot.delete_message(call.message.chat.id, call.message.message_id)
                bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=main_menu())
            else:
                bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", call.message.chat.id, call.message.message_id, reply_markup=main_menu())

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback: {e}")
        if "there is no text in the message to edit" in str(e):
            bot.send_message(call.message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞.")
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
